name: 'Docker Build'
description: 'Builds docker using caching techniques'
inputs: 
  buildName:  # id of input
    description: 'Name of Build'
    required: true
  add-hosts:
    description: "List of a customs host-to-IP mapping (e.g., docker:10.180.0.1)"
    required: false
  allow:
    description: "List of extra privileged entitlement (e.g., network.host,security.insecure)"
    required: false
  build-args:
    description: "List of build-time variables"
    required: false
  build-contexts:
    description: "List of additional build contexts (e.g., name=path)"
    required: false
  cache-from:
    description: "List of external cache sources for buildx (e.g., user/app:cache, type=local,src=path/to/dir)"
    required: false
  cache-to:
    description: "List of cache export destinations for buildx (e.g., user/app:cache, type=local,dest=path/to/dir)"
    required: false
  cgroup-parent:
    description: "Optional parent cgroup for the container used in the build"
    required: false
  context:
    description: "Build's context is the set of files located in the specified PATH or URL"
    required: false
  file:
    description: "Path to the Dockerfile"
    required: false
  labels:
    description: "List of metadata for an image"
    required: false
  load:
    description: "Load is a shorthand for --output=type=docker"
    required: false
    default: 'false'
  network:
    description: "Set the networking mode for the RUN instructions during build"
    required: false
  no-cache:
    description: "Do not use cache when building the image"
    required: false
    default: 'false'
  no-cache-filters:
    description: "Do not cache specified stages"
    required: false
  outputs:
    description: "List of output destinations (format: type=local,dest=path)"
    required: false
  platforms:
    description: "List of target platforms for build"
    default: 'linux/amd64'
    required: false
  pull:
    description: "Always attempt to pull all referenced images"
    required: false
    default: 'false'
  push:
    description: "Push is a shorthand for --output=type=registry"
    required: false
    default: 'false'
  secrets:
    description: "List of secrets to expose to the build (e.g., key=string, GIT_AUTH_TOKEN=mytoken)"
    required: false
  secret-files:
    description: "List of secret files to expose to the build (e.g., key=filename, MY_SECRET=./secret.txt)"
    required: false
  shm-size:
    description: "Size of /dev/shm (e.g., 2g)"
    required: false
  ssh:
    description: "List of SSH agent socket or keys to expose to the build"
    required: false
  tags:
    description: "List of tags"
    required: false
  target:
    description: "Sets the target stage to build"
    required: false
  ulimit:
    description: "Ulimit options (e.g., nofile=1024:1024)"
    required: false
  github-token:
    description: "GitHub Token used to authenticate against a repository for Git context"
    default: ${{ github.token }}
    required: false

outputs:
  imageid:
    description: 'Image ID'
    value: ${{ steps.dbuilder.outputs.imageid }}
  digest:
    description: 'Image digest'
    value: ${{ steps.dbuilder.outputs.digest }}
  metadata:
    description: 'Build result metadata'
    value: ${{ steps.dbuilder.outputs.metadata }}


runs:
  using: "composite"
  steps:
    - name: Set up Docker Buildx
      id: buildx
        # Use the action from the master, as we've seen some inconsistencies with @v1
        # Issue: https://github.com/docker/build-push-action/issues/286
      uses: docker/setup-buildx-action@v2
        # It only worked for us with this option on ü§∑‚Äç‚ôÇÔ∏è
      with:
          driver-opts: |
            image=moby/buildkit:v0.10.6
          install: true

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
          path: /tmp/.buildx-cache-${{inputs.buildName}}
          # Key is named differently to avoid collision
          key: ${{ runner.os }}-multi-buildx-${{github.repository}}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-multi-buildx-${{github.repository}}

    - name: Build production image
      id: dbuilder
      uses: docker/build-push-action@v3.1.1
      with:
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache-${{inputs.buildName}}
          # Note the mode=max here
          # More: https://github.com/moby/buildkit#--export-cache-options
          # And: https://github.com/docker/buildx#--cache-tonametypetypekeyvalue
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new-${{inputs.buildName}}
          add-hosts: ${{inputs.add-hosts}}
          allow: ${{inputs.allow}}
          build-args: ${{ inputs.build-args }}
          build-contexts: ${{inputs.build-contexts}}
          cgroup-parent: ${{inputs.cgroup-parent}}
          context:   ${{inputs.context}}
          file:   ${{inputs.file}}
          labels:   ${{inputs.labels}}
          load:   ${{inputs.load}}
          network:   ${{inputs.network}}
          no-cache:   ${{inputs.no-cache}}
          no-cache-filters:  ${{inputs.no-cache-filters}}
          outputs:   ${{inputs.outputs}}
          platforms:   ${{inputs.platforms}}
          pull:   ${{inputs.pull}}
          push:   ${{inputs.push}}
          secrets:   ${{inputs.secrets}}
          secret-files:   ${{inputs.secret-files}}
          shm-size:   ${{inputs.shm-size}}
          ssh: ${{inputs.ssh}}
          tags: ${{inputs.tags}}
          target: ${{inputs.target}}
          ulimit: ${{inputs.ulimit}}
          github-token: ${{inputs.github-token}}
          
    - name: Move cache
      run: |
          rm -rf /tmp/.buildx-cache-${{inputs.buildName}}
          mv /tmp/.buildx-cache-new-${{inputs.buildName}} /tmp/.buildx-cache-${{inputs.buildName}}
      shell: bash
